<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				autoDrawBackground="true" color="0xE5E5E5"
				dataChange="itemrenderer_dataChangeHandler(event)"
				styleName="RecordCanvas"
				visible="true" 
				includeInLayout="true">
	
	<fx:Script>
		<![CDATA[
			import com.esri.ags.Map;
			import com.esri.ags.events.ZoomEvent;
			import com.esri.ags.geometry.MapPoint;
			import com.esri.ags.layers.ArcGISDynamicMapServiceLayer;
			import com.esri.ags.layers.ArcGISTiledMapServiceLayer;
			import com.esri.ags.layers.FeatureLayer;
			import com.esri.ags.layers.Layer;
			import com.esri.ags.symbols.*;
			import com.esri.viewer.AppEvent;
			import com.esri.viewer.ViewerContainer;
			import flash.display.BitmapData;
			import flash.display.Loader;
			import mx.binding.utils.ChangeWatcher;
			import mx.collections.ArrayCollection;
			import mx.controls.Image;
			import mx.core.UIComponent;
			import mx.events.CollectionEvent;
			import mx.events.FlexEvent;
			import mx.graphics.ImageSnapshot;
			import mx.graphics.SolidColorStroke;
			import spark.primitives.BitmapImage;
			
			[Bindable]
			private var vlabel:String;
			
			private var _loader:Loader;
			
			[Bindable]
			private var iVisible:Boolean = false;
			
			private var iminscale:Number = 0;
			
			private var imaxscale:Number = 0;
			
			private var lScale:Number = 0;
			
			private var map:Map;
			
			private var layer:Layer;
			
			private var lId:int;
			
			private var visArr:ArrayCollection;
			
			
			private function itemrenderer_dataChangeHandler(event:FlexEvent):void
			{
				var uic:UIComponent;
				if (data)
				{
					if(data.otype && data.label){
						vlabel = data.label;
						tLabel.left = 0;
						tLabel.setStyle("fontWeight", "bold");
						var rect0:Rect = new Rect();
						rect0.width = 0;
						rect0.height = 18;
						rect0.top = 1;
						rect0.bottom = 1;
						rect0.left = 0;
						rect0.fill = new SolidColor(0xffffff,1);
						addElement(rect0);
					}
					
					if((data.label && !data.otype)||(data.rend)){
						vlabel = data.rend.label;
						tLabel.left = 32;
						if(data.rend.symbol is com.esri.ags.symbols.TextSymbol)
						{
							//Not implmented
						}
						if(data.rend.symbol is com.esri.ags.symbols.SimpleMarkerSymbol)
						{
							if(data.rend.symbol.style == "circle")
							{
								var crSMSline:SimpleLineSymbol = new SimpleLineSymbol("solid",data.rend.symbol.outline.color?data.rend.symbol.outline.color:0x000000,data.rend.symbol.outline.alpha?data.rend.symbol.outline.alpha:1,data.rend.symbol.outline.width);
								var SMSCircle:SimpleMarkerSymbol = new SimpleMarkerSymbol(data.rend.symbol.style, data.rend.symbol.size, data.rend.symbol.color?data.rend.symbol.color:0x000000, data.rend.symbol.alpha?data.rend.symbol.alpha:1, data.rend.symbol.xoffset, data.rend.symbol.yoffset, data.rend.symbol.angle, crSMSline);
								uic = SMSCircle.createSwatch(30,18);
								uic.left = 0;
								uic.top = 1;
								uic.bottom = 1;
								this.addElement(uic);
							}
							if(data.rend.symbol.style == "cross")
							{
								var cSMSline:SimpleLineSymbol = new SimpleLineSymbol("solid",data.rend.symbol.outline.color?data.rend.symbol.outline.color:0x000000,data.rend.symbol.outline.alpha?data.rend.symbol.outline.alpha:1,data.rend.symbol.outline.width);
								var SMSCross:SimpleMarkerSymbol = new SimpleMarkerSymbol(data.rend.symbol.style,data.rend.symbol.size,data.rend.symbol.color?data.rend.symbol.color:0x000000, data.rend.symbol.alpha?data.rend.symbol.alpha:1,
									data.rend.symbol.xoffset, data.rend.symbol.yoffset,data.rend.symbol.angle,cSMSline);
								uic = SMSCross.createSwatch(30,18);
								uic.left = 0;
								uic.top = 1;
								uic.bottom = 1;
								this.addElement(uic);
							}
							if(data.rend.symbol.style == "diamond")
							{
								var dSMSline:SimpleLineSymbol = new SimpleLineSymbol("solid",data.rend.symbol.outline.color?data.rend.symbol.outline.color:0x000000,data.rend.symbol.outline.alpha?data.rend.symbol.outline.alpha:1,data.rend.symbol.outline.width);
								var SMSDiamond:SimpleMarkerSymbol = new SimpleMarkerSymbol(data.rend.symbol.style,data.rend.symbol.size,data.rend.symbol.color?data.rend.symbol.color:0x000000, data.rend.symbol.alpha?data.rend.symbol.alpha:1,
									data.rend.symbol.xoffset, data.rend.symbol.yoffset,data.rend.symbol.angle,dSMSline);
								uic = SMSDiamond.createSwatch(30,18);
								uic.left = 0;
								uic.top = 1;
								uic.bottom = 1;
								this.addElement(uic);
							}
							if(data.rend.symbol.style == "square")
							{
								var sSMSline:SimpleLineSymbol = new SimpleLineSymbol("solid",data.rend.symbol.outline.color?data.rend.symbol.outline.color:0x000000,data.rend.symbol.outline.alpha?data.rend.symbol.outline.alpha:1,data.rend.symbol.outline.width);
								var SMSSquare:SimpleMarkerSymbol = new SimpleMarkerSymbol(data.rend.symbol.style,data.rend.symbol.size,data.rend.symbol.color?data.rend.symbol.color:0x000000, data.rend.symbol.alpha?data.rend.symbol.alpha:1,
									data.rend.symbol.xoffset, data.rend.symbol.yoffset,data.rend.symbol.angle,sSMSline);
								uic = SMSSquare.createSwatch(30,18);
								uic.left = 0;
								uic.top = 1;
								uic.bottom = 1;
								this.addElement(uic);
							}
							if(data.rend.symbol.style == "triangle")
							{
								var tSMSline:SimpleLineSymbol = new SimpleLineSymbol("solid",data.rend.symbol.outline.color?data.rend.symbol.outline.color:0x000000,data.rend.symbol.outline.alpha?data.rend.symbol.outline.alpha:1,data.rend.symbol.outline.width);
								var SMSTri:SimpleMarkerSymbol = new SimpleMarkerSymbol(data.rend.symbol.style,data.rend.symbol.size,data.rend.symbol.color?data.rend.symbol.color:0x000000, data.rend.symbol.alpha?data.rend.symbol.alpha:1,
									data.rend.symbol.xoffset, data.rend.symbol.yoffset,data.rend.symbol.angle,tSMSline);
								uic = SMSTri.createSwatch(30,18);
								uic.left = 0;
								uic.top = 1;
								uic.bottom = 1;
								this.addElement(uic);
							}
							if(data.rend.symbol.style == "x")
							{
								var xSMSline:SimpleLineSymbol = new SimpleLineSymbol("solid",data.rend.symbol.outline.color?data.rend.symbol.outline.color:0x000000,data.rend.symbol.outline.alpha?data.rend.symbol.outline.alpha:1,data.rend.symbol.outline.width);
								var SMSX:SimpleMarkerSymbol = new SimpleMarkerSymbol(data.rend.symbol.style,data.rend.symbol.size,data.rend.symbol.color?data.rend.symbol.color:0x000000, data.rend.symbol.alpha?data.rend.symbol.alpha:1,
									data.rend.symbol.xoffset, data.rend.symbol.yoffset,data.rend.symbol.angle,xSMSline);
								uic = SMSX.createSwatch(30,18);
								uic.left = 0;
								uic.top = 1;
								uic.bottom = 1;
								this.addElement(uic);
							}
						}
						if(data.rend.symbol is com.esri.ags.symbols.SimpleLineSymbol)
						{
							var line:SimpleLineSymbol = new SimpleLineSymbol(data.rend.symbol.style,data.rend.symbol.color?data.rend.symbol.color:0x000000, data.rend.symbol.alpha?data.rend.symbol.alpha:1,data.rend.symbol.width);
							uic = line.createSwatch(30, 18);
							uic.left = 0;
							uic.top = 1;
							uic.bottom = 1;
							addElement(uic);
						}
						if(data.rend.symbol is com.esri.ags.symbols.SimpleFillSymbol)
						{
							var sSFSline:SimpleLineSymbol;
							if(data.rend.symbol.outline)
								sSFSline = new SimpleLineSymbol(data.rend.symbol.outline.style,data.rend.symbol.outline.color?data.rend.symbol.outline.color:0x000000,data.rend.symbol.outline.alpha?data.rend.symbol.outline.alpha:1,data.rend.symbol.outline.width);
							var SFSRect:SimpleFillSymbol = new SimpleFillSymbol(data.rend.symbol.style,data.rend.symbol.color?data.rend.symbol.color:0x000000, data.rend.symbol.alpha?data.rend.symbol.alpha:1,sSFSline?sSFSline:null);
							uic = SFSRect.createSwatch(30,18);
							uic.left = 0;
							uic.top = 1;
							uic.bottom = 1;
							this.addElement(uic);
						}
						if(data.rend.symbol is com.esri.ags.symbols.PictureMarkerSymbol)
						{
							var bmp:BitmapImage = new BitmapImage();
							_loader  = new Loader();
							var lc:LoaderContext = new LoaderContext(false);
							_loader.contentLoaderInfo.addEventListener(Event.COMPLETE,function(e:Event):void
							{ 
								bmp.smooth = true;
								bmp.source = e.currentTarget.content;
								bmp.top = 1;
								bmp.bottom = 1;
								bmp.left = 0;
								bmp.rotation = data.rend.symbol.angle;
							}
							);
							_loader.loadBytes(data.rend.symbol.source,lc);
							addElement(bmp);
							if(data.rend.symbol.width > tLabel.left)
								tLabel.left = data.rend.symbol.width + 10; 
						}
					}
				}
			}
		]]>
	</fx:Script>
	
	<!-- background fill -->
	<s:Rect bottom="0"
			left="0"
			right="0"
			top="0">
		<s:fill>
			<s:SolidColor alpha="0" color="0xE5E5E5"/>
		</s:fill>
	</s:Rect>
	
	<s:Label id="tLabel"
			 fontWeight="normal" fontSize="14"
			 left="45"
			 right="0"
			 color="0X191919"
			 text="{vlabel}"
			 verticalCenter="0"/>
</s:ItemRenderer>
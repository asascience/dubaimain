<?xml version="1.0" encoding="utf-8"?>
<!--
     ////////////////////////////////////////////////////////////////////////////////
     //
     // Copyright (c) 2010 ESRI
     //
     // All rights reserved under the copyright laws of the United States.
     // You may freely redistribute and use this software, with or
     // without modification, provided you include the original copyright
     // and use restrictions.  See use restrictions in the file:
     // <install location>/License.txt
     //
     ////////////////////////////////////////////////////////////////////////////////
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
             xmlns:s="library://ns.adobe.com/flex/spark"
             xmlns:mx="library://ns.adobe.com/flex/mx">

    <fx:Declarations>
        <s:Bounce id="bounce"/>
    </fx:Declarations>

    <fx:Metadata>
        [HostComponent("com.esri.viewer.WidgetTemplate")]
    </fx:Metadata>

    <s:states>
        <s:State name="normal"/>
        <s:State name="open"/>
        <s:State name="minimized"/>
        <s:State name="closed"/>
        <s:State name="disabled"/>
    </s:states>

    <s:transitions>
        <s:Transition fromState="open" toState="minimized">
            <s:Sequence>
                <!--<s:Fade duration="100" target="{widgetLabel}"/>-->
                <s:Fade duration="100" target="{headerToolGroup}"/>
                <s:Fade duration="100" target="{contentGroup}"/>
                <!--<s:Fade duration="100" target="{widgetFrame}"/>-->
                <s:Resize heightTo="30"
                          target="{hostComponent}"
                          />
                <s:Move easer="{bounce}" target="{iconGroup}"/>
            </s:Sequence>
        </s:Transition>
        <s:Transition fromState="*" toState="open">
            <s:Sequence>
                <s:Move target="{iconGroup}"/>
                <s:Resize heightTo="{hostComponent.widgetHeight}"
                          target="{hostComponent}"
                          />
                <s:Fade duration="100" target="{widgetFrame}"/>
                <s:Fade duration="200" target="{widgetLabel}"/>
                <s:Fade duration="100" target="{contentGroup}"/>
                <s:Fade duration="100" target="{headerToolGroup}"/>
            </s:Sequence>
        </s:Transition>
        <s:Transition fromState="open" toState="closed">
            <s:Sequence>
                <s:Fade duration="100" target="{widgetFrame}"/>
                <s:Fade duration="100" target="{widgetLabel}"/>
                <s:Fade duration="100" target="{headerToolGroup}"/>
                <s:Fade duration="100" target="{contentGroup}"/>
            </s:Sequence>
        </s:Transition>
    </s:transitions>

    <!-- the widget template wireframe -->
    <s:Group id="widgetFrame"
             left="0" right="0" top="0" bottom="0">
        <s:Rect width="100%" height="100%"
                radiusX="0"
                radiusY="0">
            <s:fill>
                <s:SolidColor alpha="{getStyle('contentBackgroundAlpha')}"
                              alpha.minimized="0.5"
                              color="0x666666"/>
            </s:fill>
            <s:stroke>
                <s:SolidColorStroke alpha.minimized="0.5" color="{getStyle('borderColor')}"/>
            </s:stroke>
        </s:Rect>
        <s:Rect width="100%" height="{header.height}"
                left="1" top="1" right="1"
                topLeftRadiusX="0"
                topRightRadiusX="0">
            <s:fill>
                <s:SolidColor alpha="{getStyle('contentBackgroundAlpha')}"
                              alpha.minimized="0"
                              color="0x666666"/>
            </s:fill>
        </s:Rect>
    </s:Group>

    <s:Group id="header"
             height="28"
             left="25" right="{headerToolGroup.width + 60}" top="0">
        <s:Label id="widgetLabel"
                 width="130"
                 alpha.closed="0"
                 alpha.minimized="1" color="0xE5E5E5"
                 alpha.open="1"
                 maxDisplayedLines="1"
                 showTruncationTip="true"
                 styleName="WidgetTitle"
                 text.open ="{hostComponent.widgetTitle}"
				 text.minimized ="{hostComponent.widgetTitle}"
                 verticalCenter="0"/>
    </s:Group>

    <s:Group id="headerToolGroup"
             height="28"
             right="70" top="0"
             visible.closed="false"
             visible.minimized="false"
             visible.open="true">
        <s:layout>
            <s:HorizontalLayout paddingLeft="10"/>
        </s:layout>
    </s:Group>

    <s:Group id="minclose"
             height="28"
             right="3" top="0"
             visible.closed="false"
             visible.minimized="false">
        <s:layout>
            <s:HorizontalLayout gap="2"
                                paddingLeft="2"
                                verticalAlign="middle"/>
        </s:layout>
        <mx:Image id="minimizeButton"
                  buttonMode="true"
                  includeInLayout="{hostComponent.enableMinimizeButton}"
				  source="assets/images/w_min.png"
                  toolTip="Minimize"
                  useHandCursor="true"
                  visible="{hostComponent.enableMinimizeButton}"/>
        <mx:Image id="closeButton"
                  buttonMode="true"
                  includeInLayout="{hostComponent.enableCloseButton}"
                  source="assets/images/w_close.png"
                  toolTip="Close"
                  useHandCursor="true"
                  visible="{hostComponent.enableCloseButton}"/>
    </s:Group>
	
	<s:VGroup id="iconGroup" x.minimized="{hostComponent.widgetWidth-40}" x.open="-20" y="-10" y.minimized="-5" horizontalAlign="center">
		<mx:Image id="icon"
				  width="{hostComponent.iconWidth}" height="40"
				  buttonMode="false"
				  buttonMode.minimized="true"
				  source="{hostComponent.widgetIcon}"
				  useHandCursor="false"
				  useHandCursor.minimized="true"
				  visible="{hostComponent.enableIcon}"
				  visible.closed="false"/>
		<s:Label id="iconLabel" paddingTop="-4"
				 text="Open" fontWeight="bold"
				 visible.open="false"
				 visible.closed="false"
				 visible.minimized="true" 
				 buttonMode="false"
				 buttonMode.minimized="true" click="{icon.dispatchEvent(new MouseEvent(MouseEvent.CLICK))}"/>
		<s:filters>
			<s:DropShadowFilter blurX="10" blurY="10"/>
		</s:filters>
	</s:VGroup>

    <s:Group id="contentGroup"
             left="5" right="5" top="30" bottom="5"
             clipAndEnableScrolling="true"
             visible.closed="false"
             visible.minimized="false"
             visible.normal="true"
             visible.open="true">
        <s:layout>
            <s:BasicLayout/>
        </s:layout>
    </s:Group>

    <mx:Image id="resizeButton"
              right="0" bottom="0"
              source="assets/images/w_resize.png"
              visible.closed="false"
              visible.minimized="false"
              visible.open="false"/>

    <s:filters>
        <s:DropShadowFilter alpha="0.5"
                            blurX="10"
                            blurY="10"/>
    </s:filters>

</s:SparkSkin>

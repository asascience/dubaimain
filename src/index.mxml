<?xml version="1.0" encoding="utf-8"?>
<!--
     ////////////////////////////////////////////////////////////////////////////////
//Dubai forecasting
     ////////////////////////////////////////////////////////////////////////////////
-->

<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:viewer="com.esri.viewer.*" 
               xmlns:managers="com.esri.viewer.managers.*"
			   pageTitle="Dubai Forecasting" xmlns:mx="library://ns.adobe.com/flex/mx"
			   creationComplete="application1_initializeHandler()"
			   xmlns:code="http://code.google.com/p/flex-iframe/" >

    <fx:Style source="defaults.css"/>
	
	<fx:Metadata>
		[ResourceBundle("ViewerStrings")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
		import com.esri.viewer.AppEvent;
		
		import mx.controls.Alert;
		import mx.events.FlexEvent;
			
		protected function application1_initializeHandler():void
		{
			//disable right click
			var methodName:String = "rightClick";
			ExternalInterface.addCallback (methodName,onRightClick);
			
			this.addEventListener( Event.ADDED_TO_STAGE, init );
		}
			
		private	function init(myEvent:Event):void
		{
			//This is done in the Header Controller Widget because the timing of dispatching the event here
			//is too early in the loading
			var flashVars:Object=stage.loaderInfo.parameters;		
			if(String(flashVars.agreement).toLowerCase() == "false")
			{
				navigateToURL(new URLRequest('/'), '_self');
			}
			/*var loginUser:Array=new Array;
			loginUser[0] = flashVars.group;
			var objectLoginUser:Object=
			{
				key:"loginuser",
				data:loginUser
			};
			ViewerContainer.dispatchEvent(new AppEvent(AppEvent.DATA_PUBLISH,objectLoginUser)); */
		}
			
		private function onRightClick():void
		{
			var mx:int = stage.mouseX;
			var my:int = stage.mouseY;
			if(my > 0 && my < stage.stageHeight && mx > 0 && mx < stage.stageWidth)
			{
			// show a custom context menu or do someting here
			}
		}
			
		]]>
	</fx:Script>
	
	<viewer:ViewerContainer>
		<viewer:mapManager>
			<managers:MapManager/>
		</viewer:mapManager>
		<viewer:uiManager>
			<managers:UIManager/>
		</viewer:uiManager>
		<viewer:widgetManager>
			<managers:WidgetManager/>
		</viewer:widgetManager>
		<viewer:configManager>
			<managers:ConfigManager/>
		</viewer:configManager>
		<viewer:dataManager>
			<managers:DataManager/>
		</viewer:dataManager>
	</viewer:ViewerContainer>
 </s:Application>
